##------------------------------------+
# Gorouter conf. Parses gorouter logs.|
##------------------------------------+

if [@source][component] == "gorouter" {
            if [@message] =~ "\A\{.+\}\z" {
                  json {
                      source => "@message"
                      add_tag => [ "router/syslog" ]
                      tag_on_failure => [ "router/parsing_failed" ]
                  }
    } else {
        grok {
            match => { "@message" => "%{URIHOST:Request_Host} %{NOTSPACE} \[%{TIMESTAMP_ISO8601:access_timestamp}\] \"%{WORD:Request_Method} %{URIPATHPARAM:Request_URL} %{SYSLOGPROG:Request_Protocol}\" %{NUMBER:Status_Code:int} %{NUMBER:Bytes_Received:int} %{NUMBER:Bytes_Sent:int} \"%{NOTSPACE:Referer}\" \"%{DATA:User_Agent}\" \"%{URIHOST:Remote_Address}\" \"%{URIHOST:Backend_Address}\" x_forwarded_for:\"%{DATA:X_Forwarded_For}\" x_forwarded_proto:\"%{WORD:X_Forwarded_Proto}\" vcap_request_id:\"%{DATA:X_Vcap_Request_ID}\" response_time:%{NUMBER:Response_Time:float} app_id:\"%{DATA:app_id}\" app_index:\"%{DATA:app_index}\" %{GREEDYDATA:@message}" }
            overwrite => [ "@message" ]
            add_tag => "router/accesslog"
            tag_on_failure => "router/parsing_failed"
        }
    }
    mutate { replace => { "@request_id" => "%{X_Vcap_Request_ID}" } }
    mutate { replace => { "[@cf][app_id]" => "%{app_id}" } }
    mutate { replace => { "[@cf][app_instance]" => "%{app_index}" } }
}