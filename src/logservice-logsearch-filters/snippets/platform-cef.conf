# handle cef format defined at https://docs.cloudfoundry.org/loggregator/cc-uaa-logging.html
# work has been made for uaa and credhub
if [@message] =~ "^.*CEF:0\|" {
  mutate {
    gsub => [ "@message", "^.*CEF:0\|", "CEF:0|" ]
  }
  grok {
    match => { "@message" => "CEF:0\|%{DATA:cef_device_vendor}\|%{DATA:cef_device_product}\|%{DATA:cef_device_version}\|%{DATA:cef_signature_id}\|%{GREEDYDATA:cef_name}\|%{NUMBER:cef_severity}\|%{GREEDYDATA:cef_extension}" }
  }
  mutate { add_field => { "[@source][version]" => "%{cef_device_version}" } }
  mutate { replace => { "[@source][component]" => "%{cef_device_product}" } }
  mutate {
    replace => {
      "[@source][type]" => "CEF_%{cef_device_vendor}"
      "@type" => "cf"
    }
  }

  if [@source][type] == "CEF_CloudFoundry" {
    mutate { replace => { "[@source][type]" => "CEF_cloud_foundry" } }
  }

  mutate {
    remove_field => [ "@message" ]
  }

  grok {
    match => { "cef_extension" => "rt=%{NUMBER:access_timestamp} suser=%{DATA:suser} suid=%{DATA:suid} request=%{DATA:Request_URL} requestMethod=%{DATA:Request_Method} src=%{DATA:src} dst=%{DATA:dst} cs1Label=%{DATA:cs1Label} cs1=%{DATA:cs1} cs2Label=%{DATA:cs2Label} cs2=%{DATA:cs2} cs3Label=%{DATA:cs3Label} cs3=%{DATA:cs3} cs4Label=%{DATA:cs4Label} cs4=%{DATA:cs4} cs5Label=%{DATA:cs5Label} cs5=%{NOTSPACE:cs5}( cs6Label=%{DATA:cs6Label} cs6=%{NOTSPACE:cs6})?" }
    tag_on_failure => "cef/extension/parsing_failed"
  }
  if !("cef/extension/parsing_failed" in [tags]) {
      mutate {
        add_field => {
          "%{cs1Label}" => "%{cs1}"
          "%{cs2Label}" => "%{cs2}"
          "%{cs3Label}" => "%{cs3}"
          "%{cs4Label}" => "%{cs4}"
          "%{cs5Label}" => "%{cs5}"
        }
      }

      if [cs6Label] {
        mutate { add_field => { "%{cs6Label}" => "%{cs6}" } }
      }

      if [vcapRequestId] {
        mutate { replace => { "@request_id" => "%{vcapRequestId}" } }
        mutate { remove_field => [ "vcapRequestId" ] }
      }

      if [xForwardedFor] {
        mutate {
          add_field => { "X_Forwarded_For" => "%{xForwardedFor}" }
          remove_field => [ "xForwardedFor" ]
        }
      }

      if [requestDetails] {
          json {
            source => "requestDetails"
            target => "parsed_json_field"
            remove_field => ["requestDetails"]
            add_field => { "parsed_json_field_name" => "request_details"}
          }
      }

      if [src] {
        mutate { add_field => { "[@request][src]" => "%{src}" } }
        mutate { remove_field => [ "src" ] }
      }

      if [dst] {
        mutate { add_field => { "[@request][dst]" => "%{dst}" } }
        mutate { remove_field => [ "dst" ] }
      }

      if [httpStatusCode] {
        mutate { add_field => { "[@request][status]" => "%{httpStatusCode}" } }
        mutate { remove_field => [ "httpStatusCode" ] }
      }

      mutate {
        remove_field => [ "cef_device_vendor", "cef_device_product", "cef_device_version", "cef_signature_id", "cef_name", "cef_severity", "cef_extension", "cs1Label", "cs1", "cs2Label", "cs2", "cs3Label", "cs3", "cs4Label", "cs4", "cs5Label", "cs5", "cs6Label", "cs6" ]
      }
  }
}