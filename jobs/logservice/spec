---
name: logservice

templates:
  bpm.yml: config/bpm.yml
  config.yml.erb: config/config.yml
  ssl_cert.pem.erb: config/ssl_cert.pem
  ssl_key.pem.erb: config/ssl_key.pem

packages:
  - logservice

properties:
  logservice.log.level:
    description: |
      log level to use for server
      you can chose: `trace`, `debug`, `info`, `warn`, `error`, `fatal` or `panic`
    default: "info"

  logservice.web.port:
    default: 8088
    description: Port for listening in http

  logservice.web.tls.port:
    default: 8089
    description: |
      Port for listening in https
      This will be in addition of listening in http
      You will need to set ssl_cert_file and ssl_key_file parameters in addition
  logservice.web.tls.cert:
    description: "content of an ssl cert in pem format"
  logservice.web.tls.key:
    description: "content of an ssl private key in pem format"

  logservice.web.max_keep_alive.disabled:
    decription: "set true to disable max keep alive"
    default: false
  logservice.web.max_keep_alive.duration:
    decription: "close persistent connection after given duration"
    default: 4m
  logservice.web.max_keep_alive.fuzziness:
    decription: "consider given fraction of duration when computing connection life span"
    default: 1m

  logservice.db.user:
    description: "mysql user to connect to"
  logservice.db.password:
    description: "mysql password to connect to"
  logservice.db.host:
    description: "mysql url to connect to"
    default: "database.service.cf.internal"
  logservice.db.database:
    description: "mysql database name to connect to"
  logservice.db.port:
    description: "mysql port to connect to"
    default: 3306
  logservice.db.options:
    description: "additional mysql options for connection"
    default: ""
  logservice.db.cnx.max_open:
    description: "Set the maximum number of open connections to the database"
    default: 100
  logservice.db.cnx.max_idle:
    description: "Set the maximum number of connections in the idle"
    default: 100
  logservice.db.cnx.max_life:
    description: "Set the maximum amount of time a connection may be reused. this is a duration which must be write like: `1h` for one hour or `1d` for one day ..."
    default: "1h"

  logservice.binding_cache.duration:
    description: |
      In order to avoid a lot of request to the database when forwarding logs a cache system is provided
      We recommend to set this value and set it to `always`
      This can be a duration which must be write like: `1h` for one hour or `1d` for one day ...
      Or this can be set to `always` to keep in cache all requested data indefinitely until data still exists
      in db to avoid too much memory usage (check is performed each 24h if set to always)
    default: "always"

  logservice.binding_cache.pre_cache:
    description: |
      if pre_cache set to true, all binding with latest revision will be preloaded in cacher at initialization
    default: true

  logservice.broker.username:
    description: Broker username basic auth
  logservice.broker.password:
    description: Broker password basic auth
  logservice.broker.public_host:
    description: "Hostname used in borkers' documentation and dashboards"
  logservice.broker.drain_host:
    description: "Hostname used to generate broker's syslog_drain url"
  logservice.broker.force_empty_drain_type:
    description: set to true to force empty `drain_type` field regardless of what was requested by user
    default: true

  logservice.forwarder.parsing_keys:
    description: "See configuration on https://github.com/orange-cloudfoundry/logs-service-broker#parsing_key-configuration"
    default: []
  logservice.forwarder.allowed_hosts:
    description: "List of allowed host, incomming requests for any other hosts will be rejected. empty to allow from all"
    default: []
  logservice.forwarder.ignore_tags_structured_data:
    description: "Set to true to ignore tags data structure from cloud foundry"
    default: false


  logservice.syslog_addresses:
    description: see configuration on https://github.com/orange-cloudfoundry/logs-service-broker#syslog_addresse-configuration
