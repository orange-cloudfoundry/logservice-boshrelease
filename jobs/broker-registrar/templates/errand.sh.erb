#!/bin/bash

set -eu

CF_API_URL='<%= p("cf.api_url") %>'
CF_ADMIN_USERNAME='<%= p("cf.username") %>'
CF_ADMIN_PASSWORD='<%= p("cf.password") %>'
CF_SKIP_SSL_VALIDATION='<%= p("cf.skip_ssl_validation") %>'

BROKER_NAME='<%= p("logservice.broker.name") %>'
BROKER_URL='<%= p("logservice.broker.protocol") %>://<%= p("logservice.host") %>:<%= p("logservice.broker.port") %>'
BROKER_USERNAME='<%= p("logservice.broker.username") %>'
BROKER_PASSWORD='<%= p("logservice.broker.password") %>'

function updateServiceBroker() {
  echo "Service broker already exists - updating broker"
  cf update-service-broker ${BROKER_NAME} ${BROKER_USERNAME} ${BROKER_PASSWORD} ${BROKER_URL}
}

function createServiceBroker(){
  echo "Service broker does not exist - creating broker"
  cf create-service-broker ${BROKER_NAME} ${BROKER_USERNAME} ${BROKER_PASSWORD} ${BROKER_URL}
}

export PATH=/var/vcap/packages/cli/bin
export CF_DIAL_TIMEOUT=30

echo "CF_API_URL=${CF_API_URL}"
echo "CF_SKIP_SSL_VALIDATION=${CF_SKIP_SSL_VALIDATION}"
echo "CF_ADMIN_USERNAME=${CF_ADMIN_USERNAME}"
echo "BROKER_NAME=${BROKER_NAME}"
echo "BROKER_URL=${BROKER_URL}"
echo "BROKER_USERNAME=${BROKER_USERNAME}"

if [[ ${CF_SKIP_SSL_VALIDATION} == "true" ]]; then
  cf api ${CF_API_URL} --skip-ssl-validation
else
  cf api ${CF_API_URL}
fi

cf auth \
  ${CF_ADMIN_USERNAME} \
  ${CF_ADMIN_PASSWORD}

# Create broker or update if exists
createServiceBroker || updateServiceBroker

# Loop over public plans and enable
<% p('logsrevice.broker.public_plans').each do |plan| %>
cf enable-service-access ${BROKER_NAME} -p '<%= plan %>'
<% end %>
